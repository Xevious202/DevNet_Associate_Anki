{
    "__type__": "Deck",
    "children": [],
    "crowdanki_uuid": "bdd84f34-d29e-11eb-a216-acde48001122",
    "deck_config_uuid": "bdd858b2-d29e-11eb-a216-acde48001122",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "crowdanki_uuid": "bdd858b2-d29e-11eb-a216-acde48001122",
            "dyn": false,
            "interdayLearningMix": 0,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 1,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": false,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    4,
                    0
                ],
                "order": 0,
                "perDay": 300
            },
            "newMix": 0,
            "newPerDayMinimum": 0,
            "replayq": true,
            "rev": {
                "bury": false,
                "ease4": 1.3,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "perDay": 200
            },
            "reviewOrder": 0,
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [
        "0HjdtiboXAWgWFFFS.png",
        "436px-MVC-Process.svg.png",
        "640px-Waterfall_model.png",
        "7-lean-principles.png",
        "HTTP-Client_Error_1.png",
        "HTTP-Client_Error_2.png",
        "HTTP-Informational.png",
        "HTTP-Redirectional.png",
        "HTTP-Server_Error.png",
        "HTTP-Success.png",
        "SQL-injection-attack-example.png",
        "agile-sdlc2.png",
        "csrf-cross-site-request-forgery.png",
        "sorted-XSS.png"
    ],
    "mid": 1623966180796,
    "name": "DevNet Associate",
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "css": ".card {\n  font-family: arial;\n  font-size: 20px;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n",
            "flds": [
                {
                    "font": "Arial",
                    "name": "Front",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "font": "Arial",
                    "name": "Back",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Basic-038ef",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [
                "Platforms"
            ],
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Front}}"
                }
            ],
            "type": 0
        }
    ],
    "notes": [
        {
            "__type__": "Note",
            "fields": [
                "HTML 100",
                "Informational - Continue<br><img src=\"HTTP-Informational.png\">"
            ],
            "guid": "AH}FJK6U;i",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 200",
                "Success - OK<br><img src=\"HTTP-Success.png\">"
            ],
            "guid": "0O/~W!.DC",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 301",
                "Redirectional - Moved Permanently<br><img src=\"HTTP-Redirectional.png\">"
            ],
            "guid": "AChyL6%&B]",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 302",
                "Redirectional - Found<br><img src=\"HTTP-Redirectional.png\">"
            ],
            "guid": "x:5z*d3trO",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 304",
                "Redirectional - Not Modified<br><img src=\"HTTP-Redirectional.png\">"
            ],
            "guid": "Dw3)(;^Q@g",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 400",
                "Client Error - Bad Request<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "s?;)7.N>ON",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 401",
                "Client Error - Unauthorized<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "HaHS`irZ2f",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 403",
                "Client Error - Forbidden<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "EuzH:FkXqk",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 404",
                "Client Error - Not Found<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "k3wL$GAom)",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 405",
                "Client Error - Method Not Allowed<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "C8(-TP`lg:",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 408",
                "Client Error - Request Timeout<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "nx)-8pl*%X",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 414",
                "Client Error - Request-URI Too Long<br><img src=\"HTTP-Client_Error_1.png\"><br><img src=\"HTTP-Client_Error_2.png\">"
            ],
            "guid": "p|[2p-/ok?",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 500",
                "Server Error - Internal Server Error<br><img src=\"HTTP-Server_Error.png\">"
            ],
            "guid": "z2gPYnry@q",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 501",
                "Server Error - Not Implemented<br><img src=\"HTTP-Server_Error.png\">"
            ],
            "guid": "j?`GaUQ]mH",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 502",
                "Server Error - Bad Gateway<br><img src=\"HTTP-Server_Error.png\">"
            ],
            "guid": "l1%*IUb!Fp",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 503",
                "Server Error - Service Unavailable<br><img src=\"HTTP-Server_Error.png\">"
            ],
            "guid": "evKR%=P*Ew",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "HTML 504",
                "Server Error - Gateway Timeout<br><img src=\"HTTP-Server_Error.png\">"
            ],
            "guid": "u5/=qa(duF",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API",
                "HTML"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "REPL Stands for?",
                "Read-eval-print loop<br>| a simple, interactive computer programming environment that takes single user inputs, executes them, and returns the result to the user; a program written in a REPL environment is executed piecewise."
            ],
            "guid": "AMV+2^EbVE",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python",
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: Set",
                "Properties: Unordered, iterable, mutable, can contain multiple data types<br><br>Made of unique elements (strings, numbers, or tuples)<br><br>Like Dictionaries, but with keys only (no values)"
            ],
            "guid": "j=91=WSs[}",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: Data Types",
                "Int - Integer<br>Float - Floating point number<br>Str - String<br>Bool - Boolean (e.g. true or false)<br>None - NoneType (no value)"
            ],
            "guid": "CHivyo5cY>",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: Generic Import",
                "<font color=\"#0000ff\">import [Math]</font> <br># imports the entire module<br># you still have to call functions like [math.sqrt]"
            ],
            "guid": "Npv5K^K5&C",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: Import one function from a module",
                "<font color=\"#0000ff\">from math import sqrt</font><br># Imports the sqrt function from math, making it available to the main namespace like sqrt(25)."
            ],
            "guid": "B|SG<A$^iY",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: Import multiple functions from a module",
                "<font color=\"#0000ff\">from math import sqrt, cos</font><br># Imports the sqrt and cos function from math, making them available to the main namespace like sqrt(25), cos(50)<br>"
            ],
            "guid": "D?W66ea<BS",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: import all functions from a module (generally discouraged)",
                "<font color=\"#0000ff\">from math import *</font><br># Imports all functions from math, making them available to the main namespace like sqrt(25), cos(50)<br>"
            ],
            "guid": "O~!m#!X|ux",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: import a module as an alias",
                "<font color=\"#0000ff\">import datetime as dt</font><br># Defines an alias \"dt\" that references the datetime module"
            ],
            "guid": "d5b{u|x~sC",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: Show all functions in a given module",
                "<font color=\"#0000ff\">dir(math)&nbsp; </font>#math is just an example<br># Shows all functions (including dunders) in a given module"
            ],
            "guid": "J:GNyY[Q`~",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Data Formats: What is YAML?",
                "YAML Ain't Markup Language<br><font color=\"#0000ff\"><br></font>Header Example:<font color=\"#0000ff\"><br>%YAML 1.2<br>---<br>[text]<br><br></font>Use: Configuration Files<br>Uses: Whitespace (NOT TABS), - (dash, to denote lists)"
            ],
            "guid": "x,w[V2V/<L",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "data-serialization"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Data Formats: What is XML?",
                "eXtensible Markup Language<br><br>Header Example:<br><font color=\"#0000ff\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</font><br><br>Use: Transformation with XSL, Applying XML Schemas<br>Uses: &lt;tags&gt;&lt;/tags&gt;"
            ],
            "guid": "nbX9sBFFds",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "data-serialization"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Data Formats: What is JSON?",
                "JavaScript Object Notation<br><br>Header Example<br><font color=\"#0000ff\">{</font><br><br>Use: Communication server-web page, Configuration Files<br>Uses: curly braces, square brackes, and quotes (whitespace doesn't matter)"
            ],
            "guid": "g.L,>NQ?1r",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "data-serialization"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Parsing: YAML to Python?",
                "Leverage the PyYAML Library<br>1.)<font color=\"#0000ff\"> pip install PyYAML</font><br>2.) <font color=\"#0000ff\">import yaml</font><br><br>Leverage the ruamel.yaml Library<br>1.) <font color=\"#0000ff\">pip install ruamel.yaml</font><br>2.) <font color=\"#0000ff\">from ruamel.yaml import YAML</font><br>"
            ],
            "guid": "GvU*E?;auc",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "data-serialization",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Parsing: JSON to Python?",
                "Leverage the json Library<br>1.)<font color=\"#0000ff\"> import json</font><br>"
            ],
            "guid": "m%s/<-@47!",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "data-serialization",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Parsing XML to Python?",
                "Leverage the xmltodict Library<br>1.) <font color=\"#0000ff\">pip install xmltodict</font><br>2.) <font color=\"#0000ff\">import xmltodict</font><br><br>Leverage the untangle Library<br>1.) <font color=\"#0000ff\">pip install untangle</font><br>2.) <font color=\"#0000ff\">import untangle</font><br><br>Leverage the minidom Library<br>1.) <font color=\"#0000ff\">import xml.dom.minidom</font><br><br>Leverage the ElementTree Library<br>1.) <font color=\"#0000ff\">import xml.etree.ElementTree</font><br><br>"
            ],
            "guid": "K}Q9Vzwt5",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "data-serialization",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What are it's advantages?",
                "1.) Helps you organize development and engineering work, allowing you to easily collaborate<br>2.) Keeps a history of every change made to the repository, when it was made and who made it."
            ],
            "guid": "txDQI)aGy6",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What Command Initializes a directory for a GIT project?",
                "<font color=\"#0000ff\">git init</font>"
            ],
            "guid": "t?6=@8qPYq",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What command configures GIT parameters like username and email address?",
                "<font color=\"#0000ff\">git config &lt;parameters&gt;</font>"
            ],
            "guid": "se8zp~K-Oq",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What GIT Command checks the status of your project?",
                "<font color=\"#0000ff\">git status</font>"
            ],
            "guid": "f|2$f6d#H",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What git command starts tracking files and adds them to the staging area?",
                "<font color=\"#0000ff\">git add &lt;file/dir&gt;</font>"
            ],
            "guid": "Qmtn%O23sK",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What git command stops tracking files but doesn't delete them?",
                "<font color=\"#0000ff\">git rm &lt;file/dir&gt;</font>"
            ],
            "guid": "sLRZKSb@v`",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What git command creates a local snapshot and comment on your project?",
                "<font color=\"#0000ff\">git commit -m &lt;message&gt;</font>"
            ],
            "guid": "OA2V3YL8dE",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What command in Git allows you to make changes to a remote repository?",
                "<font color=\"#0000ff\">git remote &lt;parameters&gt;</font>"
            ],
            "guid": "iMoP3;~qQi",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What git command can get changes from a remote repository?",
                "1.) <font color=\"#0000ff\">git pull </font>(looks for changes &amp; gets a copy of those changes)<br>2.) <font color=\"#0000ff\">git fetch &lt;parameters&gt; </font>(only checks metadata, used to see if any changes are available)"
            ],
            "guid": "zGG/J*k5BI",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What Git command sends local committed changes to a remote repository?",
                "<font color=\"#0000ff\">git push &lt;parameters&gt;</font>"
            ],
            "guid": "u$EGhrbYIj",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, what is a remote repository?",
                "It is a common repository that all team members use to collaborate, where all the files of a given project reside, and where all local repositories are pulled. Can be stored on an internal or external server."
            ],
            "guid": "K/Vq_y;>`t",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, what is a local repository?",
                "It is a personal repository, typically on your own machine, where commits (also called snapshots) are stored."
            ],
            "guid": "Mv?x,r#c]n",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, what is a Staging Area?",
                "Like a rough draft space, where you can <font color=\"#0000ff\">git add</font> the version of a file(s) that you want git to track for your next commit. Also called an \"INDEX\", it is a \"proto-commit\" that will turn into your next commit when <font color=\"#0000ff\">git commit </font>is ran."
            ],
            "guid": "?ZgpnnYk>",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, what is the Working Directory?",
                "It is a single checkout of one version of the project (repository) which is \"clean\" until you make changes. Controlled by Git, differences are tracked between your working directory and local repository, and again between your local repository and the remote (if there is one). It contains a .git subfolder with all the git related revision history of your repo."
            ],
            "guid": "QD`MO|V<{(",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What Git command shows you a list of commit messages &amp; hashes?",
                "<font color=\"#0000ff\">Git log --oneline</font>"
            ],
            "guid": "r8_6&749.N",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: What Git command allows you to move to a previous commit?",
                "<font color=\"#0000ff\">git revert &lt;hash&gt;</font>"
            ],
            "guid": "EuxIv.cnO]",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, how do you manipulate branching?",
                "<font color=\"#0000ff\">git branch &lt;with or without parameters&gt;</font> (allows you to see/create/delete local branches)<br>"
            ],
            "guid": "Byt6q(P^4A",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, how do you move to another branch?",
                "<font color=\"#0000ff\">git checkout &lt;parameters&gt;<br></font>Note: you can both create and move to a new branch with git checkout -b &lt;branchname&gt;<font color=\"#0000ff\"><br></font>"
            ],
            "guid": "d1$Z{ay@}$",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, how do you combine two branches?",
                "<font color=\"#0000ff\">git merge &lt;branch to be merged&gt;</font> (command is ran from the target branch, e.g. ran from master to collapse a branch into the master)"
            ],
            "guid": "km,kbCe6ft",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, what happens when automatic merge conflict resolution fails on one or more files (no deletions)?",
                "You have to solve the conflict manually, you'll see an error output in the merge, but you can also run <font color=\"#0000ff\">git status</font> to see the files with conflicts. Look for \"<font color=\"#0000ff\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</font>\", the change on file, \"<font color=\"#0000ff\">=======</font>\", and your proposed change followed by another \"<font color=\"#0000ff\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; (branchname)\"</font>.<br>Delete the conflict report, keeping the \"correct\" string, <font color=\"#0000ff\">git add</font> your fixes, commit, and try the merge again. (You can either merge locally or push the changes to the remote git and perform a pull request to merge it there)<br>"
            ],
            "guid": "luMhqr!lcU",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, what happens when automatic merge conflict resolution fails due to file removal?",
                "You have to solve the conflict manually, you'll see an error both in the merge output, and a <font color=\"#0000ff\">git status </font>command. If you choose to keep the file, add it back to the staging area (Index). If you want to delete the file, <font color=\"#0000ff\">git rm &lt;filename&gt; </font>to remove it from git. Then commit and merge again. (You can either merge locally or push the changes to the remote git and perform a pull request to merge it there)"
            ],
            "guid": "ey:tdn-;{3",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In Git, how do you see the difference between your staging area (Index) and last commit (your working tree)?",
                "<font color=\"#0000ff\">git diff</font><br>a<font color=\"#0000ff\"> -</font> sign at the beginning means the original string<br>a <font color=\"#0000ff\">+</font> sign means staged changes<br><br>By applying <font color=\"#0000ff\">--cached</font>, you see staging vs. local repository<br><br>By applying <font color=\"#0000ff\">HEAD</font>, you see working directory vs. local repository<br><br>You can also use commit hashes to compare"
            ],
            "guid": "y5B?SJZ.m}",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "API: What's the difference between POST and PUT?",
                "Idempotency;<br>POST: Used to <i>modify </i>AND <i>update</i> a resource<br>PUT: Used to <i>create</i> or <i>overwrite</i> a resource<br><br>PUT is idempotent, no matter how many times you run it, you'll get the one result, think <i>x=1</i>. POST updates or causes a change, think <i>x=x+1.</i>"
            ],
            "guid": "BMQiTV^aF1",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "API"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: Describe the capabilities of Ansible",
                "Ansible is Declarative, telling it what to do, not how to do it.<br><br>Pushes configuration from hub to spokes<br><br>Uses Playbooks and roles which allow reuse of common configuration steps.<br><br>Has pre-built modules that can be combined to accomplish your goal."
            ],
            "guid": "rS%Y[/<k$7",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: Describe the capabilities of Puppet",
                "Puppet is Declarative, telling it what to do, not how to do it.<br><br>Nodes PULL configuration tasks from the hub<br><br>Puppet Agent required on nodes.<br><br>Leverages PuppetDB and Facter to store all data generated by Puppet and discover/report per-node facts."
            ],
            "guid": "JiSJFrns}^",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: Describe the capabilities of Chef",
                "Chef is Procedural, telling a node how to do something, not just what to do.<br><br>Nodes PULL configuration from the hub.<br><br>Requires an agent on nodes.<br><br>Uses Recipes (collection of attributes) and Cookbooks (collections of Recipes).<br>"
            ],
            "guid": "H^pw4JY@v:",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is pyATS?",
                "Automation testing, for test driven development<br><br>Allows network engineers to perform stateful validation of their device operational status, automate day-to-day DevOps activities, and build a safety-net of scalable, reusable tests around their network with a Dashboard.<br><br>Uses virtual or physical test bed.<br>"
            ],
            "guid": "s1`LINPv|8",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Development: Define Waterfall (SDLC)",
                "Waterfall: A software development methodology where a linear process is visualized as moving down through phases.<br><img src=\"640px-Waterfall_model.png\"><br>Pros: Rigid and Structured, easy to set milestones. Works well for small, well-defined projects.<br>Cons: As all requirements are identified once, in the beginning, changing direction can be difficult. Is generally much slower, with a much larger implementation."
            ],
            "guid": "J]hiYmZfA2",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Development"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Development: Define Agile (SDLC)",
                "Agile: One of the newer and most popular methodologies based on frequent and small incremental releases focused on small, iterative improvements to align with requirements as they are understood or change.<br><img src=\"agile-sdlc2.png\"><br>Pros: Allows testing and re-evaluation at each cycle. Much faster iterations (in Scrum, called a \"Sprint\") on the order of 2 weeks or even hours.<br>Cons: Scope creep can occur due to less understood initial requirements. Can be difficult to maintain documentation as speed is sometimes given priority."
            ],
            "guid": "Q<nAwvOSxc",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Development"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Development: Define Lean (SDLC)",
                "Lean: Adapted from the Toyota Production System, everything that doesn't add value to the customer is seen as waste (\"muda\"). Lean software development is considered to be an Agile software development method. Three major points are people, processes, and purpose.<br><br><img src=\"7-lean-principles.png\"><br>Pros: Eliminates superfluous work, saving time and money<br>Cons: Highly team skill dependent, requiring excellent documentation."
            ],
            "guid": "OwgrvV+&84",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Development"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Development: What is Test Driven Development?",
                "TDD is a software-development process relying on software requirements being converted to test cases before software is fully developed. Then development is tracked by repeatedly testing the software against all test cases."
            ],
            "guid": "A&2P,QduKS",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Development"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Development: What are the steps in the test-driven development cycle?",
                "1.) Add a test<br>2.) Run all tests. The new test <i>should fail </i>for expected reasons.<br>3.) Write the simplest code that passes the new test.<br>4.) Run all tests. They should now pass.<br>5.) Refactor (to \"improve\" without affecting the outward behavior) the code."
            ],
            "guid": "M7`k(?on=4",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Development"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In GitLab, how do you request your branch be merged into the main/master?",
                "With a&nbsp;<i>Merge Request</i>"
            ],
            "guid": "Ew,}GkmZ5z",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Version Control: In GitHub, how do you request your branch be merged into the main/master?",
                "With a <i>Pull Request</i>"
            ],
            "guid": "P>?C-U^}ZL",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "version-control"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design: What is a Function and why would you use it?",
                "Functions are a handy way to isolate a particular part of your program’s functionality and make it&nbsp;<i>reusable. </i>They are easily called upon instead of rewriting multiple lines of code.<br><br>Remember DRY (Do not Repeat Yourself) in code, so doing something more than once is a good indicator to create a function.<br><br>Functions are generally task specific and short so that they are easily reused regardless of what the purpose of your code is. (e.g. \"Turn all integers into floats\" could be used in creating a new encoding, or used in any number of ways).<br><br>In Python, functions have their own namespace, allowing you to reuse variable names and values that you don't want leaked into the main namespace."
            ],
            "guid": "jxQ~`QTQ]u",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Design"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design: What is a Module and why would you use it?",
                "Modules package function(s) along with classes, global variables and other statements and comments. This allows certain features source code to be separated from the rest of the application code then ran together at runtime.<br><br>They should have as few dependencies as possible but are rarely fully independent.<br><br>Many modules have a <font color=\"#0000ff\">__main__</font> section that allows you to run the module by itself to see examples of what it does and why (e.g. the math module). Remember that a Module should NOT run anything automatically when imported!<br><br>They compartmentalize complex tasks or processes and make them easily usable in other code with the <font color=\"#0000ff\">import</font> statement.<br><br><br>"
            ],
            "guid": "r$m=2~yO?-",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Design"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design: What is a Class and why would you use it?",
                "Classes are used to keep related things together in an Object Oriented Programming (OOP) language like Python.<br><br>A Class is a collection of data (variables), and Methods (functions). It's generally accepted that classes use a capitalized first letter, where functions are lowercase. Classes can also inherit data from other Classes (e.g. <font color=\"#0000ff\">Yellowstone</font> might inherit variables and Methods from Class <font color=\"#0000ff\">National_Parks</font>).<br><br>It stores shared features, where unique features should go under the instance.<br><br>e.g.&nbsp;<br>class Switch:<br>&nbsp; &nbsp; name = \"Catalyst\"<br>&nbsp; &nbsp; model = \"9300\"<br><br>When you call a function, it runs the function.<br>When you call a Class, it makes an instance.<br>"
            ],
            "guid": "NSb9U33T5l",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Design"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design: What is a Method and why would you use it?",
                "A Method is a function that access a Class attribute. They are nested into a Class, and you will always need to provide the first argument to the Method with the <font color=\"#0000ff\">self</font> keyword.<br><br>A common Class Method is the <font color=\"#0000ff\">__init__ </font>Method.&nbsp; It is used to provide initial values for Class attributes at runtime (think defaults)."
            ],
            "guid": "EYKGf${pLn",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Design"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design: What is the MVC?",
                "Model-View-Controller, an architectural software design pattern. Each item being an object role.<br><br>Model: Encapsulates what the information IS<br>View: For displaying information to the user (Contains the common \"Front-end\")<br>Controller: Makes changes to the model on input if necessary, informs the view component to update the presentation.<br><br>A primary feature: Separation of the View and the Model.<br><img src=\"436px-MVC-Process.svg.png\">"
            ],
            "guid": "JFH_F/3j[6",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Design"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Design: What is the Observer pattern?",
                "The&nbsp;<b>observer pattern</b>&nbsp;is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Design_pattern_(computer_science)\">behavioral software design pattern</a>&nbsp;in which an&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object_(computer_science)#Objects_in_object-oriented_programming\">object</a>, named the&nbsp;<b>subject</b>, maintains a list of its dependents, called&nbsp;<b>observers</b>, and notifies them automatically of any state changes, usually by calling one of their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a>.<br>(<a href=\"https://en.wikipedia.org/wiki/Observer_pattern\">SRC</a>)<br><br>Mainly used in event handling/driven software, like social media, song playlists, etc."
            ],
            "guid": "G?18Q(aaze",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Design"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is a Northbound Interface",
                "Northbound APIs or northbound interfaces are responsible for the communication between the SDN controller and the services that run over the network. They summarize, or abstract, the lower-level control information occuring between the controller and southbound physical or virtual components. This communication is typically done with REST API's.&nbsp;<br><br>"
            ],
            "guid": "w:!qhTS[TO",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is a Southbound Interface",
                "Southbound interfaces are used to interact with physical or virtual devices in the network. this is done over lower-level communication methods like:<br>Netconf / RESTconf<br>OpFlex<br>OpenFlow<br>SNMP<br>REST<br>and other vendor-specific protocols (like NX-API for Cisco Nexus devices)"
            ],
            "guid": "DB-9Fj#4Mw",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What are some benefits of using a software-defined network (SDN)?",
                "Benefits include:<br>Consistent Network Security<br>Centralized Provisioning<br>Faster Deployments of new features/services<br>Programmability for automation"
            ],
            "guid": "t#[|*Er3Q@",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is the difference between Software-Defined Networking, and Intent-Based Networking?",
                "<b>Intent-based Networking</b> (IBN), adds these features to <b>Software-Defined Networking</b> (SDN);<br><b>Translation:</b> Turning business intent into network policy. You define intent, or \"what\", and the system determines the \"how\", checking existing policies for conflicts, and implementing changes as needed.<br><b>Activation:</b> Upon approval, autonomously deploys policy to network configurations in the environment.<br><b>Assurance: </b>Continuous verification of network health and status maintains network health and recommends fix-actions to operators if any are needed."
            ],
            "guid": "d~[Y$7L|93",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What are the 5 principles of Infrastructure as Code (IaC)?",
                "They are;<br><b>Store</b> your code in a repository as a backup of network configuration.<br><b>Evolve</b> your code as your network changes over time.<br><b>Collaborate</b> within your organization and with the world via open-source projects.<br><b>Version</b> your code with GIT or other tools.<br><b>Repeat</b>, refactor your code to make it more efficient, more reusable, and more extensible!<br>"
            ],
            "guid": "kcy9$WhXo&",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is Chef?",
                "Chef is a procedural automation tool that uses a piecemeal approach to configuration management. Single operations/resources are described with a \"Recipe\". A collection of operations, more general concepts, a \"Cookbook\". It operates with a server-client architecture where configuration is pulled by the client.<br><br>It leverages the programming language Ruby, and so can have a steep learning curve. However that also means it can be very flexible. It does not support PUSH functionality.<br><br>Summary: Using Chef is like programming the control of your nodes."
            ],
            "guid": "IVe$]Y@yfw",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is Procedural programming?",
                "<b>Procedural programming</b>&nbsp;is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a>, derived from&nbsp;<a href=\"https://en.wikipedia.org/wiki/Imperative_programming\">imperative programming</a>,<sup><a href=\"https://en.wikipedia.org/wiki/Procedural_programming#cite_note-1\">[1]</a></sup>&nbsp;based on the concept of the&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Procedure_call\">procedure call</a></i>. Procedures (a type of routine or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Subroutine\">subroutine</a>) simply contain a series of computational steps to be carried out. Any given procedure might be called at any point during a program's execution, including by other procedures or itself. The first major procedural programming languages appeared circa 1957–1964, including&nbsp;<a href=\"https://en.wikipedia.org/wiki/Fortran\">Fortran</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/ALGOL\">ALGOL</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/COBOL\">COBOL</a>,&nbsp;<a href=\"https://en.wikipedia.org/wiki/PL/I\">PL/I</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/BASIC\">BASIC</a>.<sup><a href=\"https://en.wikipedia.org/wiki/Procedural_programming#cite_note-:0-2\">[2]</a></sup>&nbsp; <a href=\"https://en.wikipedia.org/wiki/Pascal_(programming_language)\">Pascal</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\">C</a>&nbsp;were published circa 1970–1972."
            ],
            "guid": "Iq2ldo6~ld",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is the Imperative programming paradigm?",
                "<div>Summary: The imperative approach defines a set of commands that have to be executed in a certain order for the system to achieve the desired state.<br><br><br>In&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_science\">computer science</a>,&nbsp;<b>imperative programming</b>&nbsp;is a&nbsp;&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a>&nbsp;that uses&nbsp;<a href=\"https://en.wikipedia.org/wiki/Statement_(computer_science)\">statements</a>&nbsp;that change a program's&nbsp;<a href=\"https://en.wikipedia.org/wiki/State_(computer_science)\">state</a>. In much the same way that the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Imperative_mood\">imperative mood</a>&nbsp;in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Natural_language\">natural languages</a>&nbsp;expresses commands, an imperative program consists of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Command_(computing)\">commands</a>&nbsp;for the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer\">computer</a>&nbsp;to perform. Imperative programming focuses on describing&nbsp;<i>how</i>&nbsp;a program operates.</div><div>The term is often used in contrast to&nbsp;<a href=\"https://en.wikipedia.org/wiki/Declarative_programming\">declarative programming</a>, which focuses on&nbsp;<i>what</i>&nbsp;the program should accomplish without specifying&nbsp;<i>how</i>&nbsp;the program should achieve the result.<br><br>Procedural and Object-oriented programming are derived from Imperative programming.</div>"
            ],
            "guid": "P?7JCJG$v_",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is the Declarative programming paradigm?",
                "<div>Summary: The desired state of the system is defined, then the system executes all the steps that need to happen in order to attain the desired state.<br><br><br>In&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_science\">computer science</a>,&nbsp;<b>declarative programming</b>&nbsp;is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a>—a style of building the structure and elements of computer programs—that expresses the logic of a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computation\">computation</a>&nbsp;without describing its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Control_flow\">control flow</a>.<sup><a href=\"https://en.wikipedia.org/wiki/Declarative_programming#cite_note-1\">[1]</a></sup></div><div>Many languages that apply this style attempt to minimize or eliminate&nbsp;<a href=\"https://en.wikipedia.org/wiki/Side_effect_(computer_science)\">side effects</a>&nbsp;by describing&nbsp;<i>what</i>&nbsp;the program must accomplish in terms of the&nbsp;<a href=\"https://en.wikipedia.org/w/index.php?title=Problem_domain&amp;action=edit&amp;redlink=1\">problem domain</a>, rather than describe&nbsp;<i>how</i>&nbsp;to accomplish it as a sequence of the programming&nbsp;<a href=\"https://en.wikipedia.org/wiki/Language_primitive\">language primitives</a><sup><a href=\"https://en.wikipedia.org/wiki/Declarative_programming#cite_note-FOLDOC_2004-2\">[2]</a></sup>&nbsp;(the&nbsp;<i>how</i>&nbsp;being left up to the language's&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_language_implementation\">implementation</a>). This is in contrast with&nbsp;<a href=\"https://en.wikipedia.org/wiki/Imperative_programming\">imperative programming</a>, which implements&nbsp;<a href=\"https://en.wikipedia.org/wiki/Algorithm\">algorithms</a>&nbsp;in explicit steps.<sup><a href=\"https://en.wikipedia.org/wiki/Declarative_programming#cite_note-Sebesta_2016-3\">[3]</a></sup></div>"
            ],
            "guid": "OqGp~lZ8h~",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is Object-oriented Programming?",
                "<div><b><a href=\"https://en.wikipedia.org/wiki/Object_(computer_science)\">Object</a>-oriented programming</b>&nbsp;(<b>OOP</b>) is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a>&nbsp;based on the concept of \"<a href=\"https://en.wikipedia.org/wiki/Object_(computer_science)\">objects</a>\", which can contain&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data\">data</a>&nbsp;and code: data in the form of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Field_(computer_science)\">fields</a>&nbsp;(often known as&nbsp;<i>attributes</i>&nbsp;or&nbsp;<i>properties</i>), and code, in the form of procedures (often known as&nbsp;<i><a href=\"https://en.wikipedia.org/wiki/Method_(computer_science)\">methods</a></i>).&nbsp;</div><div>A feature of objects is that an object's own procedures can access and often modify the data fields of itself (objects have a notion of&nbsp;<a href=\"https://en.wikipedia.org/wiki/This_(computer_programming)\"><code><span style=\"font-weight: bold;\">this</span></code></a>&nbsp;or&nbsp;<code><span style=\"font-weight: bold;\">self</span></code>). In OOP, computer programs are designed by making them out of objects that interact with one another.<sup><a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-1\">[1]</a></sup><sup><a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-2\">[2]</a></sup>&nbsp;OOP languages are diverse, but the most popular ones are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class-based_programming\">class-based</a>, meaning that objects are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Instance_(computer_science)\">instances</a>&nbsp;of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Class_(computer_science)\">classes</a>, which also determine their&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_type\">types</a>.</div>"
            ],
            "guid": "[<qdd!Ex=",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is Functional Programming?",
                "<div>n&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_science\">computer science</a>,&nbsp;<b>functional programming</b>&nbsp;is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Programming_paradigm\">programming paradigm</a>&nbsp;where programs are constructed by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Function_application\">applying</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Function_composition_(computer_science)\">composing</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Function_(computer_science)\">functions</a>. It is a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Declarative_programming\">declarative programming</a>&nbsp;paradigm in which function definitions are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Tree_(data_structure)\">trees</a>&nbsp;of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Expression_(computer_science)\">expressions</a>&nbsp;that map&nbsp;<a href=\"https://en.wikipedia.org/wiki/Value_(computer_science)\">values</a>&nbsp;to other values, rather than a sequence of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Imperative_programming\">imperative</a>&nbsp;<a href=\"https://en.wikipedia.org/wiki/Statement_(computer_science)\">statements</a>&nbsp;which update the&nbsp;<a href=\"https://en.wikipedia.org/wiki/State_(computer_science)\">running state</a>&nbsp;of the program.</div><div>In functional programming, functions are treated as&nbsp;<a href=\"https://en.wikipedia.org/wiki/First-class_citizen\">first-class citizens</a>, meaning that they can be bound to names (including local&nbsp;<a href=\"https://en.wikipedia.org/wiki/Identifier_(computer_languages)\">identifiers</a>), passed as&nbsp;<a href=\"https://en.wikipedia.org/wiki/Parameter_(computer_programming)\">arguments</a>, and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Return_value\">returned</a>&nbsp;from other functions, just as any other&nbsp;<a href=\"https://en.wikipedia.org/wiki/Data_type\">data type</a>&nbsp;can. This allows programs to be written in a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Declarative_programming\">declarative</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Composability\">composable</a>style, where small functions are combined in a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Modular_programming\">modular</a>&nbsp;manner.</div>"
            ],
            "guid": "n}}yoz[I:L",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is Puppet?",
                "Puppet is a declarative automation tool that describes system configurations. It uses language similar to JSON or XML. You describe the resource's state but cannot intervene in how that state is achieved. Single resources are described with a \"Manifest\", general concepts are described with \"Modules\". It operates with a server-client architecture where configuration is pulled by the client.<br><br>It leverages the programming language Ruby, but does not require advanced features.<br>Instead you get powerful reporting and a complete UI, though advanced tasks require Ruby in the CLI.<br><br>Summary: Using Puppet is like writing configuration files."
            ],
            "guid": "g.}E47G1)G",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is Ansible?",
                "Ansible is a declarative automation tool that describes system configurations. It uses YAML files that are both human and machine readable. It uses a model-based approach to describing how components and systems are related. single resources / operations are described with \"Modules. General concepts or tasks are described in \"Playbooks\". It operates agentless, by pushing configuration from the host, \"engine\", to clients. It uses an \"Inventory\" file to identify client targets.<br><br>It is written in the programming language Python, but most tasks do not require coding experience. Ansible's goal is to be minimal, idempotent (when playbooks are written carefully), and easy to use.<br><br>Summary: Ansible is the gateway \"drug\" to vendor-agnostic Infrastructure-as-Code."
            ],
            "guid": "n$W]_*r4j]",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is Cisco Network Services Orchestrator (NSO)?",
                "NSO is a dual-layered configuration management tool. It provides a device and service manager layer. It uses NETCONF and YANG data models. It has 4 main components, the service and device layers mentioned above, mapping logic, and a configuration database.<br><br>NSO uses Network Element Drivers (NEDs) to communicate when NETCONF isn't available southbound. Custom NEDs can be created to support other vendors or products.<br><br>Summary: NSO is a multivendor service-layer SDN controller for networks, built for network infrastructure."
            ],
            "guid": "fgD):b48)b",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What is Terraform?",
                "Terraform is a declarative automation tool . It uses Hashicorp Configuration Language (HCL), or JSON. It uses \"execution plans\" to provision infrastructure. It can also use \"modules\" to make code reusable. Execution plans outline what will happen when the code is ran.<br><br>Summary: Terraform is used commonly in cloud environments."
            ],
            "guid": "F&*s532c>p",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What does Idempotency mean?",
                "<a href=\"https://en.wikipedia.org/wiki/Idempotence\">Idempotence</a> is the property of certain&nbsp;<a href=\"https://en.wikipedia.org/wiki/Operation_(mathematics)\">operations</a>&nbsp;in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Mathematics\">mathematics</a>&nbsp;and&nbsp;<a href=\"https://en.wikipedia.org/wiki/Computer_science\">computer science</a>&nbsp;whereby they can be applied multiple times without changing the result beyond the initial application."
            ],
            "guid": "Q7udph|`^w",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What does CRUD mean with respect to RESTful APIs?",
                "<br><table><tbody><tr><th>CRUD</th><th>HTTP</th></tr><tr><td>Create</td><td><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods\">PUT</a></td></tr><tr><td>Read</td><td><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods\">GET</a></td></tr><tr><td>Update</td><td><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods\">PUT</a></td></tr><tr><td>Delete</td><td><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods\">DELETE</a></td></tr></tbody></table><br><div>In HTTP, the GET (read), PUT (create and update), and DELETE (delete) methods are CRUD operations as they have storage management semantics, meaning that they let&nbsp;<a href=\"https://en.wikipedia.org/wiki/User_agent\">user agents</a>&nbsp;directly manipulate the states of target&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_resource\">resources</a>.<sup><a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete#cite_note-2\">[2]</a></sup>&nbsp;The&nbsp;<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods\">POST</a>&nbsp;method on the other hand is a process operation that has target-resource-specific semantics excluding the semantics of CRUD operations.<sup><a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete#cite_note-it-is-okay-to-use-post-3\">[3]</a></sup></div><br>"
            ],
            "guid": "qQR3E&Y?cZ",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ansible: What is an Module?",
                "Modules (also referred to as “task plugins” or “library plugins”) are discrete units of code that can be used from the command line or in a playbook task. Ansible executes each module, usually on the remote managed node, and collects return values. In Ansible 2.10 and later, most modules are hosted in collections.<br><br>Each module has a particular use, from administering users on a specific type of database to managing VLAN interfaces on a specific type of network device. You can invoke a single module with a task, or invoke several different modules in a playbook."
            ],
            "guid": "rdvr+f(y@v",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Ansible"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ansible: What is a Task?",
                "Tasks are the units of action in Ansible. You can execute a single task with an ad hoc command.&nbsp;<br><br>They are the smallest unit of action you can automate with a playbook, which contain series of tasks. By default, they are ran one at a time, in order, against all target machines matched by the host pattern. Each task executes a module with specific arguments. Once a task has executed on all target machines, Ansible moves onto the next task."
            ],
            "guid": "eX1Hd~1ts4",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Ansible"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ansible: What is a Play?",
                "Each Playbook is composed of one or more 'plays' in a list.&nbsp;<br><br><div>The goal of a play is to map a group of hosts to some well defined roles, represented by things ansible calls tasks. At a basic level, a task is nothing more than a call to an ansible module.<br><br></div><div>By composing a playbook of multiple ‘plays’, it is possible to orchestrate multi-machine deployments, running certain steps on all machines in the webservers group, then certain steps on the database server group, then more commands back on the webservers group, etc.<br><br></div><div>“Plays” are more or less a sports analogy. You can have quite a lot of plays that affect your systems to do different things. It’s not as if you were just defining one particular state or model, and you can run different plays at different times.</div><br>"
            ],
            "guid": "yCamOUwEKF",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Ansible"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ansible: What is a Playbook?",
                "Playbooks can declare configurations, but they can also orchestrate steps of any manual ordered process, even as different steps must bounce back and forth between sets of machines in particular orders. They can launch tasks synchronously or asynchronously.<br><br>Playbooks are expressed in YAML format (see&nbsp;<a href=\"https://docs.ansible.com/ansible/2.9/reference_appendices/YAMLSyntax.html#yaml-syntax\">YAML Syntax</a>) and have a minimum of syntax, which intentionally tries to not be a programming language or script, but rather a model of a configuration or a process.<br><br>For each play in a playbook, you get to choose which machines in your infrastructure to target and what remote user to complete the steps (called tasks)"
            ],
            "guid": "L[T>Ej:l}c",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Ansible"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Ansible: What is a Role?",
                "<div>Roles are a set of playbooks, often prebuilt, used to execute a standard configuration in a repeatable manner.<br><br>Roles are ways of automatically loading certain vars_files, tasks, and handlers based on a known file structure. Grouping content by roles also allows easy sharing of roles with other users. Multiple roles can be assigned to a single host.</div><div><br><br></div>"
            ],
            "guid": "D.A}il-IFC",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Ansible"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Deployment: What is a Unit Test?<br>",
                "Unit tests are typically&nbsp;<a href=\"https://en.wikipedia.org/wiki/Automated_test\">automated tests</a>&nbsp;written and run by&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_developer\">software developers</a>&nbsp;to ensure that a section of an application (known as the \"unit\") meets its&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_design\">design</a>&nbsp;and behaves as intended.<sup><a href=\"https://en.wikipedia.org/wiki/Unit_testing#cite_note-hamill-2\">[2]</a></sup>&nbsp;In&nbsp;<a href=\"https://en.wikipedia.org/wiki/Procedural_programming\">procedural programming</a>, a unit could be an entire module, but it is more commonly an individual function or procedure. In&nbsp;<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\">object-oriented programming</a>, a unit is often an entire interface, such as a class, or an individual method.<sup><a href=\"https://en.wikipedia.org/wiki/Unit_testing#cite_note-3\">[3]</a></sup>&nbsp;By writing tests first for the smallest testable units, then the compound behaviors between those, one can build up comprehensive tests for complex applications.<sup><a href=\"https://en.wikipedia.org/wiki/Unit_testing#cite_note-hamill-2\">[2]</a><br></sup><br>A good unit test is Reliable, Isolated, Fast, and Readable."
            ],
            "guid": "d}YHxv<P%Z",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Deployment: What is an Integration Test?",
                "<b>Integration testing</b>&nbsp;(sometimes called&nbsp;<b>integration and testing</b>, abbreviated&nbsp;<b>I&amp;T</b>) is the phase in&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_testing\">software testing</a>&nbsp;in which individual software modules are combined and tested as a group. Integration testing is conducted to evaluate the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Regulatory_compliance\">compliance</a>&nbsp;of a system or component with specified&nbsp;<a href=\"https://en.wikipedia.org/wiki/Functional_requirement\">functional requirements</a>.<sup><a href=\"https://en.wikipedia.org/wiki/Integration_testing#cite_note-1\">[1]</a></sup>&nbsp;It occurs after&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unit_testing\">unit testing</a>&nbsp;and before&nbsp;<a href=\"https://en.wikipedia.org/wiki/Software_verification_and_validation\">validation testing</a>. Integration testing takes as its input&nbsp;<a href=\"https://en.wikipedia.org/wiki/Module_(programming)\">modules</a>&nbsp;that have been unit tested, groups them in larger aggregates, applies tests defined in an integration&nbsp;<a href=\"https://en.wikipedia.org/wiki/Test_plan\">test plan</a>&nbsp;to those aggregates, and delivers as its output the integrated system ready for&nbsp;<a href=\"https://en.wikipedia.org/wiki/System_testing\">system testing</a>.<sup><a href=\"https://en.wikipedia.org/wiki/Integration_testing#cite_note-2\">[2]</a><br></sup><br>There are two approaches, Big Bang (all actual components tested when finished), and Incremental (component tested while others are incomplete, this requires \"Doubles\" that replace dependancies and abstract some of their aspects)."
            ],
            "guid": "x#;io<-8[.",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Deployment: What is a System Test?",
                "<div><b>System testing</b>&nbsp;is testing conducted on a complete integrated system to evaluate the system's compliance with its specified&nbsp;<a href=\"https://en.wikipedia.org/wiki/Requirements\">requirements</a>.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\">citation needed</a></i>]</sup></div><div>System testing takes, as its input, all of the integrated components that have passed&nbsp;<a href=\"https://en.wikipedia.org/wiki/Integration_testing\">integration testing</a>. The purpose of integration testing is to detect any inconsistencies between the units that are integrated together (called&nbsp;<i>assemblages</i>). System testing seeks to detect defects both within the \"inter-assemblages\" and also within the system as a whole.<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\">citation needed</a></i>]</sup>&nbsp;The actual result is the behavior produced or observed when a component or system is tested.<sup><a href=\"https://en.wikipedia.org/wiki/System_testing#cite_note-1\">[1]</a></sup></div><div>System testing is performed on the entire system in the context of either&nbsp;<a href=\"https://en.wikipedia.org/wiki/Functional_requirements\">functional requirement</a>&nbsp;specifications (FRS) or&nbsp;<a href=\"https://en.wikipedia.org/wiki/Requirements_analysis\">system requirement</a>&nbsp;specification (SRS), or both. System testing tests not only the design, but also the behaviour and even the believed expectations of the customer. It is also intended to test up to and beyond the bounds defined in the software or hardware requirements specification(s).<sup>[<i><a href=\"https://en.wikipedia.org/wiki/Wikipedia:Citation_needed\">citation needed</a></i>]<br><br></sup>There are many types of system tests that can be conducted, Functionality, Stress, Regression, Security, etc.<sup><br></sup></div>"
            ],
            "guid": "u*piLstRH5",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Deployment: What is Acceptance Testing?",
                "<div>Formal testing with respect to user needs, requirements, and business processes conducted to determine whether a system satisfies the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Acceptance_criteria\">acceptance criteria</a><sup><a href=\"https://en.wikipedia.org/wiki/Acceptance_testing#cite_note-2\">[2]</a></sup>&nbsp;and to enable the user, customers or other authorized entity to determine whether to accept the system.</div><div>— Standard Glossary of Terms used in Software Testing<sup><a href=\"https://en.wikipedia.org/wiki/Acceptance_testing#cite_note-3\">[3]</a></sup><sup>:2<br><br></sup>There are a few types of Acceptance Testing, Alpha, Beta, Contract, Regulation, and Operational.<sup><br></sup></div>"
            ],
            "guid": "qC./VL:.Dl",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is a Semantic error in programming?",
                "<div>If there is a semantic error in your program, it will run successfully in the sense that the computer will not generate any error messages. However, your program will not do the right thing. It will do something else.&nbsp;Specifically, it will do what you told it to do.</div><div>The problem is that the&nbsp;program you wrote is not the program you wanted to write. The meaning of the program (its semantics) is wrong. Identifying semantic errors can be tricky because it requires you to work backward by looking at the output of the program and trying to figure out what it is doing.<br><br>Src:&nbsp;<a href=\"https://runestone.academy/runestone/books/published/thinkcspy/GeneralIntro/SemanticErrors.html\">https://runestone.academy/runestone/books/published/thinkcspy/GeneralIntro/SemanticErrors.html</a><br><br><br></div>"
            ],
            "guid": "gDmZF5tOq}",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Basics: What is a Syntax error in programming?",
                "<div>Python can only execute a program if the program is syntactically correct; otherwise, the process fails&nbsp;and returns an error message.&nbsp;&nbsp;<strong>Syntax</strong>&nbsp;refers to the structure of a program and the rules about that structure.For example, in English, a sentence must begin with a capital letter and end with a period. this sentence contains a&nbsp;<strong>syntax error</strong>. So does this&nbsp;one</div><div>For most readers, a few syntax errors are not a significant problem, which is why we can read the poetry of e. e. cummings without&nbsp;problems. Python is not so forgiving.&nbsp;If there is a single syntax error anywhere in your program, Python will display an error message and quit. You will not be able to complete the execution of your program. During the first few weeks of your programming career, you will probably spend a lot of time tracking down syntax errors. However, as you gain experience, you will make fewer errors and you will also be able to find your errors faster.<br><br>Src:&nbsp;<a href=\"https://runestone.academy/runestone/books/published/thinkcspy/GeneralIntro/Syntaxerrors.html\">https://runestone.academy/runestone/books/published/thinkcspy/GeneralIntro/Syntaxerrors.html</a></div>"
            ],
            "guid": "BKY4-*@zBh",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: What are two commonly used testing frameworks?",
                "Unittest and Pytest, both are simply imported into your script."
            ],
            "guid": "xjTOvh^@/W",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: What is a Decorator?",
                "A decorator is a directive placed just before a function definition that Python applies to the function before it runs, to alter how the function code behaves.<br><br>More:&nbsp;<a href=\"https://realpython.com/primer-on-python-decorators/\">https://realpython.com/primer-on-python-decorators/</a>"
            ],
            "guid": "l&h5+^;9qJ",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Basics",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: What is unittest? What are the 4 concepts of Unit testing?",
                "It is a Unit testing framework. It is included in the python standard library (doesn't need to be installed seperately). It requires classes, and uses the base class TestClass. It supports the following concepts in an object-oriented way;<br><br><b>Test Fixture:</b> Represents the preparation needed to perform one or more tests and any cleanup actions. E.g. Creating temporary or proxy databases, directories, or server starting processes.<br><br><b>Test Case: </b>The individual unit of testing. It checks for a specific response to a particular set of inputs. unittest provides a base class, TestCase, which may be used to create new test cases.<br><br><b>Test Suite:</b> A collection of test cases, test suites, or both. It is used to aggregate tests that should be executed together.<br><br><b>Test Runner: </b>A component which orchestrates the execution of tests and provides the outcome to the user. The runner may use a graphical interface, a textual interface, or return a special value to indicate the results of executing the tests.<br><br>Src:&nbsp;<a href=\"https://docs.python.org/3/library/unittest.html\">https://docs.python.org/3/library/unittest.html</a>"
            ],
            "guid": "Ju%54q;(1K",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Python: What is pytest? What are the 4 concepts of Unit testing?",
                "<i>pytest </i>is a mature full-featured Python testing tool framework that makes it easy to write small tests, yet scales to support complex functional testing for applications and libraries. Only plain assert statements are used, thanks to detailed assertion introspection. It can also run <i>unittest </i>and <i>nose</i> test suites out of the box. It is NOT included in the python standard library and must be installed seperately. After installation, \"pytest\" is ran from shell. It looks for all files labeled \"test_*\" and runs them.<br><br><b>Test Fixture:</b>&nbsp;Represents the preparation needed to perform one or more tests and any cleanup actions. E.g. Creating temporary or proxy databases, directories, or server starting processes.<br><br><b>Test Case:&nbsp;</b>The individual unit of testing. It checks for a specific response to a particular set of inputs. unittest provides a base class, TestCase, which may be used to create new test cases.<br><br><b>Test Suite:</b>&nbsp;A collection of test cases, test suites, or both. It is used to aggregate tests that should be executed together.<br><br><b>Test Runner:&nbsp;</b>A component which orchestrates the execution of tests and provides the outcome to the user. The runner may use a graphical interface, a textual interface, or return a special value to indicate the results of executing the tests.<br><br>More:&nbsp;<a href=\"https://docs.pytest.org/en/6.2.x/getting-started.html\">https://docs.pytest.org/en/6.2.x/getting-started.html</a>"
            ],
            "guid": "QjXwbx:Z~5",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Deployment: What is a happy path test?",
                "In the context of software or information modeling, a&nbsp;<b>happy path</b>&nbsp;(sometimes called&nbsp;<b>happy flow</b>) is a default&nbsp;<a href=\"https://en.wikipedia.org/wiki/Scenario_(computing)\">scenario</a>&nbsp;featuring no&nbsp;<a href=\"https://en.wikipedia.org/wiki/Exception_handling\">exceptional or error conditions</a>.<sup><a href=\"https://en.wikipedia.org/wiki/Happy_path#cite_note-1\">[1]</a></sup><sup><a href=\"https://en.wikipedia.org/wiki/Happy_path#cite_note-2\">[2]</a></sup>&nbsp;For example, the happy path for a function validating credit card numbers would be where none of the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Validation_rule\">validation rules</a>&nbsp;raise an error, thus letting execution continue successfully to the end, generating a positive response."
            ],
            "guid": "D;sIv5Vg!Y",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Deployment: What is an error path test?",
                "Also called unhappy path, It covers boundary cases to help identify code bugs. It is a term used as the opposite of \"happy path\""
            ],
            "guid": "y//aUEw2Wr",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Deployment",
                "python"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the<b> 'cd' </b>command?",
                "Change Directory<br>$ cd /home/localuser<br>$ cd ..&nbsp;"
            ],
            "guid": "Cn^n6MX]DD",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the<b> 'pwd' </b>command?",
                "Print Working Directory [path]<br>$ pwd"
            ],
            "guid": "ttZs5DVXHK",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the<b> 'ls' </b>command?",
                "List directory contents<br>$ ls -alh (a = files that begin with '.'&nbsp; &nbsp;l = long format&nbsp; &nbsp;h = uses byte, kb, mb, etc)"
            ],
            "guid": "q}Y@uC67b#",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the <b>'mkdir' </b>command?",
                "Make Directories<br>$ mkdir test"
            ],
            "guid": "p>YdNhi4O]",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the <b>'cp' </b>command?",
                "Copy Files<br>$ cp /home/localuser/testfile.py /temp/testfile_copy.py<br>$ cp -r /home/localuser /bin/homefolder.old (copies contents of a folder to a single file)"
            ],
            "guid": "K|XzA9PQ#w",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the<b> 'mv' </b>command?",
                "Move Files (It is actually just using the cp and rm commands!)<br>*Also used to rename files*<br>$ mv codex.py thecodex.py<br>$ mv /home/localuser/finalproject.txt /bin"
            ],
            "guid": "w_K7l2q72q",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the <b>'rm'</b> command?",
                "Remove (directory entries)<br>$ rm codex.py<br>$ rm -rf projectfolder"
            ],
            "guid": "NM|Qg2C,@B",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the<b> 'touch' </b>command?",
                "Sets modification and access time for files, <u>if a file doesn't exist, it is created</u> with default permissions.<br>$ touch dummyfile.txt<br>$ touch bunchOfiles[1..42].txt"
            ],
            "guid": "w.PGTIP7hn",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the <b>'cat' </b>command?",
                "Concatenate and Print Files (commonly piped to the | 'more' command for readability)<br>$ cat hitchhikersguide.txt | more<br>$ cat sshkeys.cfg<br>$ cat &gt;savetyped.txt (sends typed input to savetyped.txt)"
            ],
            "guid": "o<f=([%lMa",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the <b>'env' </b>command?",
                "Set Environment and Execute, or Print Environment (pipe output to 'more' for readability)<br>$ env | more<br>$ env HOME=/tmp/newhomefolder (sets home folder to variable)"
            ],
            "guid": "zv3jBBG:.h",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Shell: What is the<b> 'man'</b> command?",
                "Format and Display On-line Manual Pages<br>(an indispensible shell tool to understand the shell!)<br>$ man mkdir<br>$ man darktower.file"
            ],
            "guid": "Fd[#qN@mDi",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "shell"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What must a Dockerfile start with (with only one exception)?",
                "<b>FROM:</b><br>It initializes a new build stage ans sets the <i>Base Image</i> for subsequent instructions. The image can be any valid image, including from public repositories (e.g. node:12-alpine).The only instruction that can precede FROM is the <b>ARG</b> instruction.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/\">https://docs.docker.com/engine/reference/builder/</a>"
            ],
            "guid": "icOGzs<MMi",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>FROM</b> instruction provide in a Dockerfile?",
                "Specifies the Base Image, it is the first instruction in a Dockerfile (excluding the ARG instruction). There can be multiple FROM instructions for multiple images.<br><br>Example:<br>FROM node:12-alpine<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#from\">https://docs.docker.com/engine/reference/builder/#from</a>"
            ],
            "guid": "dvJkVrNC2~",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>COPY</b> instruction provide in a Dockerfile?",
                "The COPY instruction copies new files or directories from &lt;src&gt; and adds them to the filesystem of the container at the path &lt;dest&gt;.<br><br>Usage:<br>COPY [--chown=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#copy\">https://docs.docker.com/engine/reference/builder/#copy</a>"
            ],
            "guid": "6QqYOQqn-",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>ENV</b> instruction provide in a Dockerfile?",
                "The ENV instruction sets the environment variable &lt;key&gt; to the value &lt;value&gt;.<br><br>Example:&nbsp;<br>ENV MY_CAT=fluffy<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#env\">https://docs.docker.com/engine/reference/builder/#env</a>"
            ],
            "guid": "DUG]e<]P~#",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>RUN </b>instruction provide in a Dockerfile?",
                "The RUN instruction will execute any commands in a new layer <u>on top</u> of the current image and commit the results. The resulting committed image will be used for the next step in the Dockerfile.<br><br>Note: Don't confuse this with the CMD instruction, which is a command intended for the image. RUN executes a command and commits it's result upon build.<br><br>Examples:<br>RUN apt upgrade<br>RUN /bin/bash -c 'source $HOME/.bashrc; echo $HOME'<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#run\">https://docs.docker.com/engine/reference/builder/#run</a>"
            ],
            "guid": "jb4L15YDql",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>VOLUME</b> instruction provide in a Dockerfile?",
                "The VOLUME instruction creates a mount point with the specified name and marks it as holding externally mounted volumes from native host or other containers. They are outside of the lifecycle of the container (when on the host), and are easily shared between containers as the volumes are managed by Docker.<br><br>Example:<br>VOLUME /myvol<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#volume\">https://docs.docker.com/engine/reference/builder/#volume</a>"
            ],
            "guid": "C]JR!Kbm4Q",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>EXPOSE</b> instruction provide in a Dockerfile?",
                "The EXPOSE instruction informs Docker that the container listens on the specified network ports at runtime. You can specify whether the port listens on TCP or UDP (default is TCP). <br><b><br>NOTE</b>: The EXPOSE instruction does not actually publish the port, it functions as a type of documentation between the builder and operator of the container. To publish &amp; map the ports, you must use the <i>-p</i> or <i>-P</i> flag on <i>'docker run'.</i><br><br>Example:<br>EXPOSE 443/tcp<br>EXPOSE 4500/udp<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#expose\">https://docs.docker.com/engine/reference/builder/#expose</a>"
            ],
            "guid": "mU>B{Lhot^",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: What does the <b>CMD</b> instruction provide in a Dockerfile?",
                "The main purpose of a CMD is to provide defaults for an executing containers. These defaults can include an executable, or they can omit the executable, in which case you must specify an ENTRYPOINT instruction.<br><br>Like <i>Highlander</i>, there can be only one in a Dockerfile, if multiple are present, only the last CMD will take effect.<br><br>Note: Don't confuse this with the RUN instruction, which executes a command and commits it's result on build. CMD doesn't execute anything at build time, but specifies the intended command for the image which can be overridden by <i>docker run</i> arguments.<br><br>Example:<br>CMD echo \"Improbability Drive Activated.\"<br>or, more realistically, starting a webserver. This is ran without a shell, so it's a JSON array with the full path.<br>CMD [\"node\", \"src/index.js\"]<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/builder/#cmd\">https://docs.docker.com/engine/reference/builder/#cmd</a>"
            ],
            "guid": "tjr-qF~OB2",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you obtain a Docker image from a registry?",
                "<b style=\"font-style: italic;\">docker image pull </b><span style=\"font-style: italic;\">&lt;Name[:TAG|@DIGEST]&gt;<br></span>OLD: <b><i>docker pull</i></b><br><br>Pulls an image or a repository from a registry.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/pull/\">https://docs.docker.com/engine/reference/commandline/pull/</a>"
            ],
            "guid": "s)tzqg^fQK",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you build an image from the Dockerfile?",
                "<i><b>docker image build -t</b></i>&nbsp;&lt;dockerfile:version&gt;<i>&nbsp;.<br></i>OLD:&nbsp;<b><i>docker build</i></b><br><br>Builds an image from a Dockerfile and a \"context\". A build's context is the set of files located in the specified PATH or URL. The build process can refer to any of the files in the context (e.g. a COPY instruction in the Dockerfile). The '.' at the end specifies the current directory for the build context.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/build/\">https://docs.docker.com/engine/reference/commandline/build/</a>"
            ],
            "guid": "MLNd!tK<@9",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you see <u>all</u> images on your local Docker Engine?",
                "<i style=\"\"><b>docker image ls </b>-a<br></i>OLD:&nbsp;<b><i>docker ls</i></b><br><br>Lists images, -a or --all specifies all images, as the default hides intermediate images.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/image_ls/\">https://docs.docker.com/engine/reference/commandline/image_ls/</a>"
            ],
            "guid": "r/wg-0t@21",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you delete a Docker image from the local image store?",
                "<b style=\"font-style: italic;\">docker image rm</b><i> &lt;IMAGE&gt;<br></i>OLD:&nbsp;<b><i>docker rm</i></b><br><br>Removes one or more images.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/image_rm/\">https://docs.docker.com/engine/reference/commandline/image_rm/</a><br>"
            ],
            "guid": "z&ZBR?nYXb",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you run a detached Docker container from the Alpine version 3.9 image, name the running container \"web\", and expose port 5000 externally mapped inside the container to port 80?",
                "<i><b>docker container run</b>&nbsp;-d&nbsp;<b>--name</b> web </i><b><i>-p </i></b><i>5000:80 alpine:3.9<br></i>OLD:&nbsp;<b><i>docker run</i></b><br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_run/\">https://docs.docker.com/engine/reference/commandline/container_run/</a>"
            ],
            "guid": "o>bNVB3S;P",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you list running Docker containers?",
                "<b><i>docker container ls<br></i></b>OLD: <b><i>docker ps</i></b><br><br>Note: you can add <b><i>-a</i></b> to include stopped containers<br>Note2: <i>docker ls</i>&nbsp;is the depreciated command, but is also acceptable (for now)<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_ls/\">https://docs.docker.com/engine/reference/commandline/container_ls/</a>"
            ],
            "guid": "zo`/3N,o)<",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you <u>gracefully</u> stop a running Docker container?",
                "<b style=\"font-style: italic;\">docker container stop </b><i>&lt;container name or id&gt;</i><br>OLD:&nbsp;<b><i>docker stop</i></b><br><br>Stops a running container through SIGTERM, a termination signal sent to the process to request termination, which can be caught and interpreted or ignored.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_stop/\">https://docs.docker.com/engine/reference/commandline/container_stop/</a>"
            ],
            "guid": "IA}nxU4M^D",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you <u>forcefully</u> kill a running Docker container?",
                "<b style=\"font-style: italic;\">docker container kill </b><i>&lt;CONTAINER&gt;</i><br>OLD:&nbsp;<b><i>docker kill</i></b><br><br>Kills a running &lt;CONTAINER&gt; through SIGKILL, an immediate termination signal that cannot be caught or ignored by the process as it goes directly to the kernel init (completely skipping the process).<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_kill/\">https://docs.docker.com/engine/reference/commandline/container_kill/</a>"
            ],
            "guid": "yf}T-_<[o)",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you list the networks that Docker Engine knows about?",
                "<b><i>docker network ls </i></b><i>&lt;OPTIONS&gt;</i><br><br>Lists all the networks the Engine daemon knows about, this includes the networks that span across multiple hosts in a cluster.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/network_ls/\">https://docs.docker.com/engine/reference/commandline/network_ls/</a>"
            ],
            "guid": "K,OK%dQUhz",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you delete a running&nbsp;container?",
                "<b><i>docker container rm -f </i></b><i>&lt;CONTAINER&gt;</i><br><br>Forcefully deletes a running &lt;CONTAINER&gt; using SIGKILL<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_rm/\">https://docs.docker.com/engine/reference/commandline/container_rm/</a>"
            ],
            "guid": "K<MX/@avsd",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you print the last 100 lines of a given container's logs?",
                "<b><i>docker container logs --tail </i></b><i>100 &lt;CONTAINER&gt;</i><br>OLD: <b><i>docker logs<br></i></b><br>Fetches the logs from a &lt;CONTAINER&gt;<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_logs/\">https://docs.docker.com/engine/reference/commandline/container_logs/</a>"
            ],
            "guid": "sy@yUwG_>]",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How would you retag a Docker image with a new image name &amp; tag?",
                "<b><i>docker image tag</i></b> <i>&lt;SOURCE_IMAGE&gt;[:TAG] &lt;TARGET_IMAGE&gt;[:TAG]</i><br>OLD: <b><i>docker tag</i></b><br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/image_tag/\">https://docs.docker.com/engine/reference/commandline/image_tag/</a>"
            ],
            "guid": "M/Gtzk$g^O",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How would you push a Docker image to a registry?",
                "<b style=\"font-style: italic;\">docker image push </b><i>&lt;NAME&gt;[:TAG]</i><br>OLD:<b><i> docker push</i></b><br><br>Pushes an image or repository to a registry. Progress bars show uncompressed data, which is compressed before sending.<br><br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/image_push/\">https://docs.docker.com/engine/reference/commandline/image_push/</a>"
            ],
            "guid": "EFFz%?2k1-",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Containers: How do you see detailed information on a given Docker Container?",
                "<b><i>docker container inspect</i> </b><i>&lt;CONTAINER&gt;</i><br>OLD: <b style=\"font-style: italic;\">docker inspect</b><br><br>Provides detailed information on constructs controlled by Docker, by default as a JSON array.<br><br>Note: docker image &amp; network inspect is also useful.<br>src:&nbsp;<a href=\"https://docs.docker.com/engine/reference/commandline/container_inspect/\">https://docs.docker.com/engine/reference/commandline/container_inspect/</a>"
            ],
            "guid": "hdCxNmru7$",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Containers"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is OWASP?",
                "The Open Web Application Security Project is an online community that produces free information in the filed of web application security.&nbsp; Their \"Top Ten\" list of vulnerabilities is referenced by many organizations, to include:<br>MITRE (a federally funded R&amp;D group), <br>PCI DSS (Payment Card Industry Data Security Standard), <br>DISA STIG (Defense Information Systems Agency Security Technical Implementation Guide), <br>FTC (Federal Trade Commission)<br><br>src:&nbsp;<a href=\"https://en.wikipedia.org/wiki/OWASP\">https://en.wikipedia.org/wiki/OWASP</a>"
            ],
            "guid": "qPN9FZsqa?",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is an XSS attack?",
                "Cross-site scripting attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. They usually take the form of JavaScript, but can be any type of code the browser can execute.<br><br><img src=\"sorted-XSS.png\"><br><br>There are three common types;<br><b>Stored XSS</b>, where the injected script is permanently stored on the target servers (database, comment field, etc). The victim retrieves the malicious script when it requests the stored information.<br><br><b>Reflected XSS</b>, where the injected script is reflected off the web server, such as an error message. They are delivered to victims via another route such as email.<br><br><b>DOM</b> (Document Object Model) <b>Based XSS</b>, where the payload is executed as a result of modifying the DOM \"environment\" in the victim's browser used by the original client side script so it runs in an \"unexpected\" manner.<br><br><br>src:&nbsp;<a href=\"https://owasp.org/www-community/attacks/xss/\">https://owasp.org/www-community/attacks/xss/</a><br>src:&nbsp;<a href=\"https://www.imperva.com/learn/application-security/csrf-cross-site-request-forgery/\">https://www.imperva.com/learn/application-security/</a>"
            ],
            "guid": "o4U}H~(|yC",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is SQL Injection?",
                "A SQL injection attack consists of insertion or \"injection\" of a SQL query via the input data from the client to the application. A successful exploit can read sensitive data from the database, modify database data, execute administrative operations, recover the content of a file, and in some cases issue commands to the operating system.<br><img src=\"SQL-injection-attack-example.png\"><br><br>src:&nbsp;<a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">https://owasp.org/www-community/attacks/SQL_Injection</a><br>src:&nbsp;<a href=\"https://www.imperva.com/learn/application-security/csrf-cross-site-request-forgery/\">https://www.imperva.com/learn/application-security/</a>"
            ],
            "guid": "oW_CYQWBk7",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is a CSRF attack?",
                "Cross Site Request Forgery is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. If the victim is a normal user, a successful attack can force the user to perform state changing requests like transferring funds, changing their email, etc.&nbsp; If the victim is an administrative user, the attack can compromise the entire web application.<br><br><img src=\"csrf-cross-site-request-forgery.png\"><br><br>src:&nbsp;<a href=\"https://owasp.org/www-community/attacks/csrf\">https://owasp.org/www-community/attacks/csrf</a><br>src:&nbsp;<a href=\"https://www.imperva.com/learn/application-security/csrf-cross-site-request-forgery/\">https://www.imperva.com/learn/application-security/</a>"
            ],
            "guid": "gb8L&_ai|*",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is a SSRF attack?",
                "Server-Side Request Forgery attack is one in which the attacker can abuse functionality on the server to read or update internal resources. The attacker can supply or modify a URL which the code running on the server will read or submit data to, and by carefully selecting URLs, the attacker may be able to read server configuration, connect to internal services, or perform POST requests directly to internal services.<br><br><img src=\"0HjdtiboXAWgWFFFS.png\"><br><br>src:&nbsp;<a href=\"https://owasp.org/www-community/attacks/Server_Side_Request_Forgery\">https://owasp.org/www-community/attacks/Server_Side_Request_Forgery</a><br>src:&nbsp;<a href=\"https://medium.com/@briskinfosec/ssrf-server-side-request-forgery-ae44ec737cb8\">https://medium.com/@briskinfosec/ssrf-server-side-request-forgery-ae44ec737cb8</a>"
            ],
            "guid": "A]kV=4;Ok,",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is a TLS/SSL Termination Proxy? What are the three types?",
                "A TLS/SSL termination proxy is a proxy server that acts as an intermediary point between client and server. There are three connectivity patterns, but importantly, they are NOT TLS pass-through proxies, they always manipulate the client-server connection.<br><br><b>TLS Offloading:</b> Inbound TLS/SSL from Client, plaintext to the server.<br><b>TLS Encryption:</b> Outbound plaintext from Client is encrypted to the server.<br><b>TLS Bridging:</b> Inbound TLS/SSL from Client, a seperate TLS/SSL to the server.<br><br>src:&nbsp;<a href=\"https://en.wikipedia.org/wiki/TLS_termination_proxy\">https://en.wikipedia.org/wiki/TLS_termination_proxy</a>"
            ],
            "guid": "Kdj>3@)j*a",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is a Web Application Firewall (WAF), and how is it different from a standard Firewall?",
                "A web application firewall (WAF) is a specific form of application firewall that filters, monitors, and blocks HTTP/S traffic to and from a webservice. By inspecting HTTP/S traffic, it can prevent attacks exploiting a web application's known vulnerabilities, such as SQL injection, cross-site scripting (XSS), file inclusion, and improper system configuration. While a standard firewall operates on OSI layers 3-4, a WAF operates on 3-7.<br><br>src:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Web_application_firewall\">https://en.wikipedia.org/wiki/Web_application_firewall</a>"
            ],
            "guid": "o]VdFg%-Sj",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is a Reverse Proxy?",
                "A reverse proxy is a server that sits in front of web servers and forwards client requests to those web servers. They are typically implemented to help increase security, performance, and reliability. They intercept client requests and communicate with one or more web servers on behalf of the clients. They are different from a load balancer as they offer more features, local caching of static resources, compression, and SSL termination.<br><br>src:&nbsp;<a href=\"https://www.cloudflare.com/learning/cdn/glossary/reverse-proxy/\">https://www.cloudflare.com/learning/cdn/glossary/reverse-proxy/</a><br>src:&nbsp;<a href=\"https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/\">https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/</a>"
            ],
            "guid": "Lch$:H^asW",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is a Load Balancer?",
                "Load balancing refers to efficiently distributing incoming network traffic across a group of backend servers, also known as a server farm or pool. They act as a \"traffic cop\" sitting in front of your servers and routing client requests across all servers capable of fulfilling those requests in a manner that maximizes speed and capacity utilization. All while ensuring no one server is overworked which would affect performance.<br><br>They can operate on OSI layers 4 or 7. Balancing traffic on IP/port or URL/Data respectively.<br><br>src:&nbsp;<a href=\"https://www.nginx.com/resources/glossary/load-balancing\">https://www.nginx.com/resources/glossary/load-balancing</a>"
            ],
            "guid": "t6G.Kg?Q~c",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Security: What is Secure DNS (DNSSEC)?",
                "DNS (Domain Name System) is the phone book of the internet. It is also the second most attacked protocol next to HTTP. Standard, plaintext, DNS queries create opportunities for DNS exploits such as DNS hijacking and on-path attacks. These attacks can redirect traffic to fake copies of a website. One of the best ways to protect DNS from these exploits is leveraging DNSSEC (DNS Security Extensions).<br><br>DNSSEC digitally signs data to ensure validity. In order for a lookup to be secure, signing happens at every level of the DNS process (e.g. DNS recursor -&gt; Root Nameserver -&gt; TLD Nameserver -&gt; Authoritative Nameserver).<br><br>src:&nbsp;<a href=\"https://www.cloudflare.com/learning/dns/dns-security/\">https://www.cloudflare.com/learning/dns/dns-security/</a><br>src:&nbsp;<a href=\"https://www.cloudflare.com/learning/dns/what-is-dns/\">https://www.cloudflare.com/learning/dns/what-is-dns/</a>"
            ],
            "guid": "e0.c!zl^j0",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Security"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Automation: What are some use cases for network simulation and test tools? (e.g. VIRL/CML, pyATS)",
                "They can be used for;<br>1.) Building PoCs (Proof of Concepts) or testing new network designs.<br>2.) Pre-production/testing enviroments to test infrastructure changes in production architecture.<br>3.) Development of new or updated IaC (Infrastructure as Code), management code, etc.<br>4.) As a sandbox for training and certifications."
            ],
            "guid": "t,oCQKVg9I",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Automation"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Platforms: What is Cisco DNA, what are it's capabilities?",
                "Cisco DNA (Digital Network Architecture) is an intent-based network management platform.&nbsp;<br><br>It has 5 core capabilities;<br>1.) Policy Implementation: Control the network through policy intent.<br>2.) Automation: Zero-touch provisioning, network configuration from a centralized dashboard.<br>3.) Analytics: Network-wide visibility and monitoring gives you the ability to see sub-optimal performance.<br>4.) Security: Segment your network as needed to contain lateral threats, isolate endpoints, and mitigate vulnerabilities.<br>5.) Open Platform: Easy data and intelligence exchange with external applciations and systems, both north and southbound.<br><br>src:&nbsp;<a href=\"https://www.cisco.com/c/en/us/solutions/collateral/enterprise-networks/cisco-digital-network-architecture/nb-06-cisco-dna-aag-cte-en.html?oid=aagen000309\">https://www.cisco.com/c/en/us/solutions/collateral/enterprise-networks/cisco-digital-network-architecture/nb-06-cisco-dna-aag-cte-en.html?oid=aagen000309</a>"
            ],
            "guid": "nzKG>w`$.g",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Platforms"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Platforms: What is Cisco ACI, what are it's capabilities?",
                "Cisco Application Centric Infrastructure (ACI) is a data center focused SDN solution that automates network and security for workloads within and across heterogeneous domains; i.e., physical, virtual, containers, and public cloud.<br><br>It has 4 core capabilities:<br>1.) Automation and Consistency: Resource elasticity with automation for common data center operations. Works well with dynamic environments with workload life-cycles.<br>2.) Multicloud Acceleration: Extend consistent policy across datacenters and even cloud.<br>3.) Zero-trust: Uses a zero trust security model to protect workloads from east-west vulnerabilities as well as isolate traffic at OSI layer 4, leveraging a white-list policy model.<br>4.) Centralized Management: Day 2 operations more proactive as issues and outages can be quickly discovered and remediated through ACI's highly-available leaf-spine topology.<br><br>src:&nbsp;<a href=\"https://www.cisco.com/c/en/us/solutions/data-center-virtualization/application-centric-infrastructure/index.html\">https://www.cisco.com/c/en/us/solutions/data-center-virtualization/application-centric-infrastructure/index.html</a><br>"
            ],
            "guid": "pqQ&;J`*nD",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Platforms"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Platforms: What is Cisco NSO, what are it's capabilities?",
                "Cisco NSO (Network Services Orchestrator) is a model-driven (YANG) orchestration platform for hybrid networks. It is powerful in multi-vendor environments and it's predecessor Tail-f supported many service providers (AT&amp;T, Deutsch Telekcom). It supports multivendor networks through Network Element Drivers (NEDs).<br><br>NSO is geared towards Developers, and a Dev-ops environment, and it's capabile of driving Cisco DNA, ACI, and more.<br><br>It has 3 core capabilities;<br>1.) OS Upgrades: Streamlines network element and device upgrades in a multivendor environment.<br>2.) Device port turn-up: Manage bulk provisioning for multivendor operations.<br>3.) Zero-Touch Provisioning: Onboard new network devices without human intervention, supports multi-vendor.<br><br>src:&nbsp;<a href=\"https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html\">https://www.cisco.com/c/en/us/products/cloud-systems-management/network-services-orchestrator/index.html</a>"
            ],
            "guid": "b=e24w(W){",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Platforms"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Platforms: What is Cisco UCSM, what are it's capabilities?",
                "Cisco Unified Compute System Manager (UCSM) is a software/hardware product that manages UCS server infrastructure.&nbsp; It manages UCS Blade/Chassis, UCS Mini, and Cisco Hyperflex. It only manages one server domain, as it runs on physical hardware (a pair Fabric Interconnect switches) in the datacenter.<br><br>It has 3 core capabilities;<br>1.) Directly manages UCS B and C-series servers, including UCS Mini and Hyperflex.<br>2.) Provides unified policy, configuration, and provisioning templates for all connected servers. Larger scale (multiple locations/UCSM instances) is done with UCS Central, a different product that is a manager of managers.<br>3.) Integrates with Third-party systems via a robust XML API or Python SDK.<br><br>src:&nbsp;<a href=\"https://www.cisco.com/c/en/us/products/servers-unified-computing/ucs-manager/index.html\">https://www.cisco.com/c/en/us/products/servers-unified-computing/ucs-manager/index.html</a>"
            ],
            "guid": "u]Lz3Gh]Sk",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Platforms"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Platforms: What is Cisco UCS Central, what are it's capabilities?",
                "Cisco Unified Compute System Central is a software product that allows you to manage multiple Cisco UCS domains through a single management point. It works with Cisco UCS Manager (UCSM) as a \"manager of managers\" to provide a scalable management solution for an enterprise environment. It does not replace UCSM, but allows you to ensure global policy, firmware, and configuration compliance.&nbsp;<br><br>It has a handful of core capabilities;<br>1.) Centralized inventory and health status with dashboard and reporting allows for easy and consistent monitoring.<br>2.) Global and local policies allow for unique deployed areas and common \"golden\" policies for all sites.<br>3.) Policy based server definitions and firmware can be applied locally or globally as needed.<br><br>src:&nbsp;<a href=\"https://www.cisco.com/c/en/us/products/servers-unified-computing/ucs-central-software/index.html\">https://www.cisco.com/c/en/us/products/servers-unified-computing/ucs-central-software/index.html</a>"
            ],
            "guid": "i661hcg3,o",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Platforms"
            ]
        },
        {
            "__type__": "Note",
            "fields": [
                "Platforms: What is Cisco Intersight, and what are it's capabilities?",
                "Cisco Intersight is a cloud-based software management platform for Cisco UCS and Hyperflex. It simplifies systems management across data centers, remote office-branch office (ROBO), and edge environments. The highly available system means consistent monitoring and management regardless of local network stability provided other locations can still communicate. Built with DevOps in mind with OpenAPI, Python and Powershell SDKs.<br><br>It has 2 core capabilities above and beyond UCSM/Central;<br>1.) Learns and evolves to deliver improved insights to help you manage your environment.<br>2.) Cisco TAC has visibility of system health/configurations allowing for proactive RMA's and Incident response.<br><br>src:&nbsp;<a href=\"https://www.cisco.com/c/en/us/products/collateral/cloud-systems-management/intersight/at-a-glance-c45-739419.html\">https://www.cisco.com/c/en/us/products/collateral/cloud-systems-management/intersight/at-a-glance-c45-739419.html</a>"
            ],
            "guid": "wa:<nFS@,A",
            "note_model_uuid": "bdd89a3e-d29e-11eb-a216-acde48001122",
            "tags": [
                "Platforms"
            ]
        }
    ]
}